{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _http = _interopRequireDefault(require(\"../../libs/http\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\prog\\\\cryptoTracker\\\\src\\\\components\\\\coins\\\\CoinsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CoinsScreen = function (_Component) {\n  (0, _inherits2.default)(CoinsScreen, _Component);\n\n  var _super = _createSuper(CoinsScreen);\n\n  function CoinsScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CoinsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.componentDidMount = function _callee() {\n      var coins;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_http.default.instance.get('https://api.coinlore.net/api/tickers/'));\n\n            case 2:\n              coins = _context.sent;\n\n              _this.setState({\n                coins: res.data\n              });\n\n              console.log(coins);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handlePress = function () {\n      console.log(\"go to detail\", _this.props);\n\n      _this.props.navigation.navigate('CoinDetail');\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(CoinsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, \"Coin Screen\"), _react.default.createElement(_reactNative.Pressable, {\n        style: styles.btn,\n        onPress: this.handlePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.btnText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, \"Ir a detail\")));\n    }\n  }]);\n  return CoinsScreen;\n}(_react.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"red\"\n  },\n  titleText: {\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  btn: {\n    padding: 8,\n    backgroundColor: \"blue\",\n    borderRadius: 8,\n    margin: 16\n  },\n  btnText: {\n    color: \"#fff\",\n    textAlign: \"center\"\n  }\n});\n\nvar _default = CoinsScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/prog/cryptoTracker/src/components/coins/CoinsScreen.js"],"names":["CoinsScreen","componentDidMount","Http","instance","get","coins","setState","res","data","console","log","handlePress","props","navigation","navigate","styles","container","titleText","btn","btnText","Component","StyleSheet","create","flex","backgroundColor","color","textAlign","padding","borderRadius","margin"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;IAEMA,W;;;;;;;;;;;;;;;;UAEFC,iB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACIC,cAAKC,QAAL,CAAcC,GAAd,CAAkB,uCAAlB,CADJ;;AAAA;AACVC,cAAAA,KADU;;AAGhB,oBAAKC,QAAL,CAAc;AAACD,gBAAAA,KAAK,EAAEE,GAAG,CAACC;AAAZ,eAAd;;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAOpBM,W,GAAc,YAAM;AAChBF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,MAAKE,KAAjC;;AACA,YAAKA,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B;AACH,K;;;;;;;WAED,kBAAS;AACL,aACI,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,6BAAC,sBAAD;AAAW,QAAA,KAAK,EAAEF,MAAM,CAACG,GAAzB;AAA+B,QAAA,OAAO,EAAE,KAAKP,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAFJ,CADJ;AAQH;;;EAvBqBC,gB;;AA0B1B,IAAML,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,KAAK,EAAC,MADC;AAEPC,IAAAA,SAAS,EAAE;AAFJ,GALkB;AAS7BR,EAAAA,GAAG,EAAE;AACDS,IAAAA,OAAO,EAAE,CADR;AAEDH,IAAAA,eAAe,EAAE,MAFhB;AAGDI,IAAAA,YAAY,EAAE,CAHb;AAIDC,IAAAA,MAAM,EAAE;AAJP,GATwB;AAe7BV,EAAAA,OAAO,EAAE;AACLM,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,SAAS,EAAE;AAFN;AAfoB,CAAlB,CAAf;;eAqBe1B,W","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\r\nimport Http from '../../libs/http';\r\n\r\nclass CoinsScreen extends Component {\r\n\r\n    componentDidMount = async () => {\r\n        const coins = await Http.instance.get('https://api.coinlore.net/api/tickers/');\r\n\r\n        this.setState({coins: res.data});\r\n        console.log(coins);\r\n    }\r\n\r\n    handlePress = () => {\r\n        console.log(\"go to detail\", this.props);\r\n        this.props.navigation.navigate('CoinDetail')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View style={styles.container}>\r\n                <Text style={styles.titleText}>Coin Screen</Text>\r\n                <Pressable style={styles.btn}  onPress={this.handlePress}>\r\n                    <Text style={styles.btnText}>Ir a detail</Text>\r\n                </Pressable>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"red\"\r\n    },\r\n    titleText: {\r\n        color:\"#fff\",\r\n        textAlign: \"center\"\r\n    },  \r\n    btn: {\r\n        padding: 8,\r\n        backgroundColor: \"blue\",\r\n        borderRadius: 8,\r\n        margin: 16\r\n    },\r\n    btnText: {\r\n        color: \"#fff\",\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nexport default CoinsScreen;"]},"metadata":{},"sourceType":"script"}